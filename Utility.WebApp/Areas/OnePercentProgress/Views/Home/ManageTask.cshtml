@model TaskViewModel
<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-1">
        </div>
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->
<div class="content">
    <div class="container-fluid">
        <div class="row">
            <!-- left column -->
            <div class="col-md-12">
                <!-- jquery validation -->
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Manage Task</h3>
                    </div>
                    <!-- /.card-header -->
                    <!-- form start -->
                    <form role="form" id="taskForm">
                        @Html.HiddenFor(m => m.Id)
                        @Html.HiddenFor(m => m.ProjectId)
                        @Html.HiddenFor(m => m.ParentTaskId)
                        @Html.AntiForgeryToken()
                        <div class="card-body">
                            <div class="form-group">
                                <label for="@Html.NameFor(m => m.Name)">@Html.DisplayNameFor(m => m.Name)<span class="text-danger mr-2">*</span></label>
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder="Enter title", @autocomplete="off" })
                            </div>
                            <div class="form-group">
                                <label for="@Html.NameFor(m => m.Status)">@Html.DisplayNameFor(m => m.Status)<span class="text-danger mr-2">*</span></label>
                                @Html.DropDownListFor(m => m.Status, Model.StatusList, "Update Status", new { @class = "form-control" })
                            </div>
                        </div>
                        <!-- /.card-body -->
                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <a href="@Url.Action("Tasks", "Home", new { area = "OnePercentProgress", parentTaskId = Model.ParentTaskId, projectId = Model.ProjectId })" class="btn btn-secondary">Back to tasks</a>
                        </div>
                    </form>
                </div>
                <!-- /.card -->
            </div>
            <!--/.col (left) -->
            <!-- right column -->
            <div class="col-md-6">
            </div>
            <!--/.col (right) -->
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content -->
@section Scripts{
<script type="text/javascript">
    $(document).ready(function () {
       $.validator.setDefaults({
            submitHandler: function (form) {
                debugger
                var data = $("#taskForm").serialize();
                var url = "/OnePercentProgress/Home/ManageTask";
                console.log(data);
                $.ajax({
                    type: 'POST',
                    url: url,
                    data: data,
                    error: function(data) {
                        Functions.HandleAjaxResponse(data);
                    },
                    success: function(data) {
                        Functions.HandleAjaxResponse(data);
                    },
                });
                return false;
            }
        });

        $('#taskForm').validate({
            rules: {
                Name: {
                    required: true,
                },
                Status: {
                    required: true,
                },
            },
            messages: {
                Name: {
                    required: "Please enter a title",
                },
                Status: {
                    required: "Please update a status",
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
    });
</script>
}